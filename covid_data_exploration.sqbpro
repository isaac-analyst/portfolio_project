<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/isaac/Portfolio_projects.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8131"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,11:maincovid_death"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="covid_death" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="70"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="77"/><column index="6" value="84"/><column index="7" value="80"/><column index="8" value="152"/><column index="9" value="92"/><column index="10" value="88"/><column index="11" value="160"/><column index="12" value="161"/><column index="13" value="157"/><column index="14" value="229"/><column index="15" value="169"/><column index="16" value="165"/><column index="17" value="237"/><column index="18" value="128"/><column index="19" value="88"/><column index="20" value="165"/><column index="21" value="101"/><column index="22" value="178"/><column index="23" value="157"/><column index="24" value="234"/><column index="25" value="170"/><column index="26" value="247"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="covid_vaccination" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="70"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="81"/><column index="6" value="77"/><column index="7" value="180"/><column index="8" value="176"/><column index="9" value="149"/><column index="10" value="248"/><column index="11" value="95"/><column index="12" value="110"/><column index="13" value="98"/><column index="14" value="128"/><column index="15" value="130"/><column index="16" value="165"/><column index="17" value="105"/><column index="18" value="124"/><column index="19" value="196"/><column index="20" value="220"/><column index="21" value="222"/><column index="22" value="257"/><column index="23" value="197"/><column index="24" value="273"/><column index="25" value="237"/><column index="26" value="300"/><column index="27" value="119"/><column index="28" value="132"/><column index="29" value="86"/><column index="30" value="105"/><column index="31" value="105"/><column index="32" value="110"/><column index="33" value="122"/><column index="34" value="160"/><column index="35" value="144"/><column index="36" value="113"/><column index="38" value="154"/><column index="39" value="197"/><column index="40" value="110"/><column index="41" value="185"/><column index="42" value="261"/><column index="43" value="197"/><column index="44" value="119"/><column index="45" value="274"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="portfolio" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="43"/><column index="2" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/*
Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
*/

--geting the data to be used
SELECT *
FROM covid_death
Where continent is not null
order by 2,3

SELECT *
FROM covid_vaccination
Where continent is not null
order by 2,3


-- working with some extracted data

Select continent,Location, date, total_cases, new_cases, total_deaths, population
From covid_death
Where continent is not null 
order by 2,3

-- the death_percentage by location

Select continent, Location, date, total_cases, total_deaths, (CAST(total_deaths as REAL)/total_cases)*100 AS death_percentage
From covid_death
where continent is not NULL
order by 1,2

-- the total_cases  in respect to death_percentage in nigeria

Select Location, date, total_cases, total_deaths, (CAST(total_deaths as REAL)/total_cases)*100 AS death_percentage
From covid_death
Where location like '%nigeria%'
order by 1,2

--Total_Cases vs Population
-- Shows what percentage of population infected with Covid

Select continent, Location, date, Population, total_cases,  (CAST(total_cases as REAL)/population)*100 AS infected_percentage
From covid_death
--Where location like '%nigeria%'
where continent is not NULL
order by 1,2

-- Countries with the Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as Highest_Infection_Count,  Max((CAST(total_cases  AS REAL)/population))*100 as infected_percentage
From covid_death
--Where location like '%nigeria%'
Group by Location, Population
order by infected_percentage desc

-- country with the highest death_rate from the infection per population

Select Location, Population, max(total_deaths) as Highest_death_Count,  Max((CAST(total_deaths  AS REAL)/population)*100) as total_death_percentage
From covid_death
--Where location like '%nigeria%'
Group by Location
order by total_death_percentage desc

--higest_death count by continents

Select continent, Population, max(total_deaths) as Highest_death_Count,  Max((CAST(total_deaths  AS REAL)/population)*100) as total_death_percentage
From covid_death
--Where location like '%nigeria%'
where continent is not NULL
Group by continent
order by total_death_percentage desc

--global numbers on date specifics

Select date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as REAL))/SUM(New_Cases)*100 as Death_Percentage
From covid_death 
--Where location like '%nigeria%'
where continent is not null 
Group By date
order by 1,2


-- globle numbers (total number of cases, total deaths and ther percentage)

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as REAL))/SUM(New_Cases)*100 as Death_Percentage
From covid_death 
--Where location like '%nigeria%'
where continent is not null 
--Group By date
order by 1,2

--joining covid_vaccination with covid_death table for further explorations

SELECT *
from covid_death AS cd
JOIN covid_vaccination AS cv
on cd.location = cv.location
and cd.date = cv.date

-- Total Population vs Vaccinations

SELECT cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations, 
sum(cast(cv.new_vaccinations  as INT)) over (partition by cd.location order by cd.location, 
cd.date) as rolling_people_vaccinated
from covid_death AS cd 
JOIN covid_vaccination AS cv
on cd.location = cv.location
and cd.date = cv.date
where cd.continent is not NULL
order by 2,3

--total_number of people vaccinated by countries and Percentage of Population that has recieved at least one Covid Vaccine

-- Using CTE to perform Calculation on Partition By in previous query


With Pop_Vac (Continent, Location, Date, Population, New_Vaccinations, Rolling_People_Vaccinated)
as
(
SELECT cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations, 
sum(cast(cv.new_vaccinations  as INT)) over (partition by cd.location order by cd.location, 
cd.date) as rolling_people_vaccinated
from covid_death AS cd 
JOIN covid_vaccination AS cv
on cd.location = cv.location
and cd.date = cv.date
where cd.continent is not NULL
)
Select *, (cast(Rolling_People_Vaccinated  as REAL)/Population)*100 as percentage_people_vaccinated
From Pop_Vac


-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
SELECT cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations, 
sum(cast(cv.new_vaccinations  as INT)) over (partition by cd.location order by cd.location, 
cd.date) as rolling_people_vaccinated
from covid_death AS cd 
JOIN covid_vaccination AS cv
on cd.location = cv.location
and cd.date = cv.date
where cd.continent is not NULL

</sql><current_tab id="0"/></tab_sql></sqlb_project>
